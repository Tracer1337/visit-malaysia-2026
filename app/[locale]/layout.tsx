import type { Metadata } from 'next';
import '../globals.css';
import { Inter, DM_Sans } from 'next/font/google';
import Navigation from '../_components/Navigation';
import Footer from '../_components/Footer';
import { i18n, Locale } from '../../i18n-config';
import { fetchLandingPage } from '@/_lib/strapi/landing-page';
import { GoogleMapsBootstrapScript } from '@/_lib/google/maps';

const inter = Inter({
  subsets: ['latin'],
  display: 'swap',
});

const dm_sans = DM_Sans({
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-dm_sans',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
  hero,
  params,
}: Readonly<{
  children: React.ReactNode;
  hero: React.ReactNode;
  params: Promise<{
    locale: Locale;
  }>;
}>) {
  const locale = (await params).locale;

  const landingPageData = await fetchLandingPage({ locale });

  return (
    <html lang={locale}>
      <head>
        <GoogleMapsBootstrapScript />
      </head>
      <body className={`${inter.className} ${dm_sans.variable} antialiased`}>
        <div className="container mx-auto pt-4">
          <Navigation data={landingPageData.data.attributes.Header} />
        </div>
        {hero}
        {children}
        <Footer data={landingPageData.data.attributes.Footer} />
      </body>
    </html>
  );
}

export async function generateStaticParams() {
  return i18n.locales.map((locale) => ({ locale: locale.code }));
}
